// scss样式
$themes: (blue: (background_color1: #409EFF, //背景色
        text-color: #ffffff ,//本色
        border_style2:0px solid rgb(0, 0, 0),
        color:#4069ffc4
    ),
    green: (
        background_color1: #67C23A, //背景
        text-color: #ffffff, // 主文本色
        border_style2:0px solid rgb(229, 255, 0),
color:#67c23a9f
    ),
    orange: (
        background_color1: #E6A23C, //背景
        text-color: #ffffff, // 主文本色
        border_style2:0px solid rgb(229, 255, 0),
color:#e6a23c98
    ),
    red: (
        background_color1: #F56C6C, //背景
        text-color: #ffffff, // 主文本色
        border_style2:0px solid rgb(229, 255, 0),
color:#f56c6c85
    ),
    gray: (
        background_color1: #909399, //背景
        text-color: #ffffff, // 主文本色
        border_style2:0px solid rgb(229, 255, 0),
color:#90939994
    )
    );

// 处理样式，遍历主题map
@mixin themeify {

    @each $theme-name,
    $theme-map in $themes {
        //!global 把局部变量提升为全局变量
        $theme-map: $theme-map !global;

        //判断html的data-theme的属性值  #{}是sass的插值表达式
        //& sass嵌套里的父容器标识   @content是混合器插槽，像vue的slot
        [data-theme="#{$theme-name}"] & {
            @content;
        }
    }
}

//声明一个根据Key获取颜色的function
@function themed($key) {
    @return map-get($theme-map, $key);
}

// 获取颜色
@mixin background_color($color) {
    @include themeify {
        background: themed($color) !important;
    }
}

//获取字体颜色
@mixin font_color($color) {
    @include themeify {
        color: themed($color) !important;
    }
}

@mixin border($color) {

    @include themeify {

        border: themed($color);

    }

}
@mixin text_color($color) {

    @include themeify {

        color: themed($color);

    }

}